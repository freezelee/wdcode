<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- 读取数据库配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="${dataSourceConfig}" />
	</bean> 

	<!-- 数据连接池配置 -->
	<bean id="dataSource" class="org.wdcode.core.dao.datasource.BasicDataSource"
		destroy-method="close">
		<property name="parse" value="${parse:dbcp}" />
		<property name="driver" value="${driver:com.mysql.jdbc.Driver}" />
		<property name="url" value="${url}" />
		<property name="user" value="${user}" />
		<property name="password" value="${password}" />
		<property name="initialPoolSize" value="${initialPoolSize:30}" />
		<property name="minPoolSize" value="${minPoolSize:30}" />
		<property name="maxPoolSize" value="${maxPoolSize:100}" />
		<property name="maxSize" value="${maxSize:200}" />
		<property name="timeout" value="${timeout:10000}" />
		<property name="maxIdleTime" value="${maxIdleTime:3600000}" />
		<property name="idleTimeout" value="${idleTimeout:1800000}" />
	</bean>

	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="namingStrategy" ref="namingStrategy" />
		<property name="packagesToScan" value="${packagesToScan:org.wdcode.*.po}" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${dialect}</prop>
				<!-- 调试 -->
				<prop key="hibernate.show_sql">${hibernate.sql:false}</prop>
				<prop key="hibernate.format_sql">${hibernate.sql:false}</prop>
				<prop key="hibernate.release_mode">auto</prop>
				<prop key="hibernate.connection.isolation">1</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.batch:25}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.fetch:25}</prop>
				<!-- 事务 -->
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext
				</prop>
				<!-- 缓存 -->
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache:false}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache:false}</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
				</prop>
				<prop key="hibernate.cache.query_cache_factory">org.hibernate.cache.internal.StandardQueryCacheFactory
				</prop>
				<!-- search -->
				<prop key="hibernate.search.default.directory_provider">filesystem</prop>
				<prop key="hibernate.search.default.indexBase">${hibernate.search.default.indexBase:${path}/WEB-INF/indexed}
				</prop>
				<prop key="hibernate.search.lucene_version">${hibernate.search.lucene_version:LUCENE_36}</prop>
				<prop key="hibernate.ejb.event.post-insert">org.hibernate.search.event.FullTextIndexEventListener
				</prop>
				<prop key="hibernate.ejb.event.post-update">org.hibernate.search.event.FullTextIndexEventListener
				</prop>
				<prop key="hibernate.ejb.event.post-delete">org.hibernate.search.event.FullTextIndexEventListener
				</prop>
				<prop key="hibernate.search.autoregister_listeners">true</prop>
			</props>
		</property>
	</bean>

	<!-- 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
</beans>